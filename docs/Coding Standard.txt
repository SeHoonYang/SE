Coding Standard 1.3 July 15th, 2016 revised

Indentation
  2 spaces, do not use tab

Rules for header file(.h)
  to avoid overlap function declaration, add #ifdef,#ifdef, and #endif directives
  if name of the header file is *.h, name of the macro should be _*_H_

Rules for function declaration
  for function header, do not write argument name
    ex) void ex_func1(int);
  for pointer type argument, position of '*' doesn't matter
    ex) void ex_func2(int *); (O)
        void ex_func3(int*); (O)
  for multiple arguments, keep one space between arguments
    ex) void ex_func4(int, char *, float);
  for function body, locate '{' on the next line of the function name
    ex) void ex_func1(int foo)
        {
          /* bar */
        }
  do not use upper case letters for function name, you can use lower case letters, digits, and underbar(_)

Rules for struct
  similar as function declaration, locate '{' on the next line of the name
  also do not user upper case letter for structure name
    ex) struct foo
        {
          int bar;
        };

Rules for comments
  do not use double slash (//)
  use slash with star to explane the function/structure (/* ~ */)
  *but double slash may be used to comment out one line temporarily
  *or double slash can be used inside of /**/ comment

Rules for macros
  use upper case letters to declare macros(it does not mean normal variable names can not have upper case letters)

Additionaly,
  do not use inline keyword, it will be ignored by Tiny C Compiler

Above rules may not be applied to external libraries or functions.
  see strtok_r function on lib/lib.c